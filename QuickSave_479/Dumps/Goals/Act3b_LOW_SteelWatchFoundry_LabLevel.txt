Version 1
SubGoalCombiner SGC_AND

INITSECTION
DB_Dialogs(S_LOW_GondianWorker04_6cc09c40-6b09-4e92-ad36-4e5ad72f7c43, LOW_SteelWatchFoundry_GondianWorker04_efefaf90-4eb1-481b-5caf-d6f980094902);
DB_Dialogs(S_LOW_GondianWorker05_e86d2e9b-f55b-4eaf-9ba6-0245d17b6d1c, LOW_SteelWatchFoundry_GondianWorker05_6ad87ae9-2643-528f-e855-25bc58bc2208);
DB_Dialogs(S_LOW_GondianWorker06_53a85a70-979b-480a-afb1-ec8d9239e0f8, LOW_SteelWatchFoundry_GondianWorker06_eb5944ce-1ba4-6810-f0a3-f73ac58bc3e6);
DB_Dialogs(S_LOW_GondianWorker09_2fb2c297-3c00-4b98-8412-41aea0087db5, LOW_SteelWatchFoundry_GondianWorker09_389183a4-fe4a-b329-a346-0aea6db26e81);
DB_Dialogs(S_LOW_GondianWorker10_ffc8a25f-6ceb-4081-8e07-eca2205989c5, LOW_SteelWatchFoundry_GondianWorker10_2453e367-da25-583c-557f-449707c23772);
DB_LOW_LabGondians(S_LOW_GondianWorker04_6cc09c40-6b09-4e92-ad36-4e5ad72f7c43);
DB_LOW_LabGondians(S_LOW_GondianWorker05_e86d2e9b-f55b-4eaf-9ba6-0245d17b6d1c);
DB_LOW_LabGondians(S_LOW_GondianWorker06_53a85a70-979b-480a-afb1-ec8d9239e0f8);
DB_LOW_LabGondians(S_LOW_GondianWorker09_2fb2c297-3c00-4b98-8412-41aea0087db5);
DB_LOW_LabGondians(S_LOW_GondianWorker10_ffc8a25f-6ceb-4081-8e07-eca2205989c5);
DB_LOW_LabBaneites(S_LOW_BaneiteOfficer06_0ce716ac-f6fa-4b7d-8fda-456b0e74f90f);
DB_LOW_LabBaneites(S_LOW_BaneiteOfficer07_2dc326b9-73f4-40a6-af7f-54955e3b1ebd);
DB_LOW_LabBaneites(S_LOW_BaneiteOfficer08_015d02bd-0c8e-41c8-a6da-df92d71084d2);
DB_LOW_LabBaneites(S_LOW_BaneiteOfficer09_0c5259f6-3c86-4e84-b61e-42e9f31691ce);
DB_LOW_LabBaneites(S_LOW_BaneiteOfficer10_Leader_a2db5bf9-03a9-408e-971f-fc63741308bb);
DB_LOW_LabBaneites(S_LOW_BaneiteOfficer14_750a35b3-b0c5-4007-ae1a-4446c95a56ae);
DB_LOW_LabBaneites(S_LOW_BaneiteOfficer15_0b5a37de-60f3-403c-b5e8-b74afd50fa3d);
DB_LOW_LabBaneites(S_LOW_BaneiteOfficer18_f4a8f9e0-564c-41ed-8598-4c350b88f0e8);
DB_LOW_LabBaneites(S_LOW_BaneiteOfficer19_f5a48aa9-d67a-4fcd-9fe8-15e933314ca1);
DB_LOW_LabBaneites(S_LOW_BaneiteOfficer20_4b2f8018-f988-4dfd-bb59-962dc90070f3);
DB_LOW_LabBaneites(S_LOW_BaneiteOfficer21_9a64e678-c5aa-43ed-8765-33882e9f1ab9);
DB_LOW_LabBaneites(S_LOW_LabRoomWatcher01_d48bb47b-7e55-45ab-ac19-708bd91e6eb4);
DB_LOW_LabBaneites(S_LOW_LabRoomWatcher02_c3117337-b9cb-455d-aaf2-15d69143acc8);
DB_LOW_SteelWatchFoundry_DeadMansSwitches(S_LOW_BaneiteOfficer_PostIRN01_36c0bb47-a8cc-4381-882b-a2ded38d0b5c, S_LOW_DeadMansSwitch08_a8baf49a-1249-42fb-aa79-dc2fa8420c3b, "LOW_Switch08");
DB_LOW_SteelWatchFoundry_DeadMansSwitches(S_LOW_BaneiteOfficer07_2dc326b9-73f4-40a6-af7f-54955e3b1ebd, S_LOW_DeadMansSwitch07_10398e9f-e1a1-4431-84f6-4c27fe9847a7, "LOW_Switch07");
DB_LOW_SteelWatchFoundry_DeadMansSwitches(S_LOW_BaneiteOfficer09_0c5259f6-3c86-4e84-b61e-42e9f31691ce, S_LOW_DeadMansSwitch09_03d355e5-d742-4949-b857-80ee936f8fcf, "LOW_Switch09");
DB_LOW_SteelWatchFoundry_DeadMansSwitches(S_LOW_BaneiteOfficer02_de084b09-99c6-426e-9159-f692d180d418, S_LOW_DeadMansSwitch02_0dbbc23e-a6c1-4ebb-8f8b-495306813e1b, "LOW_Switch02");
DB_LOW_SteelWatchFoundry_DeadMansSwitches(S_LOW_BaneiteOfficer10_Leader_a2db5bf9-03a9-408e-971f-fc63741308bb, S_LOW_DeadMansSwitch10_9c769082-8fc7-4c6b-b3c2-366b07654188, "LOW_Switch10");
DB_LOW_SteelWatchFoundry_DeadMansSwitches(NULL_00000000-0000-0000-0000-000000000000, S_LOW_DeadMansSwitch10_38268e0d-ee64-4650-8c11-4038ff342864, "LOW_Switch11");
DB_LOW_SteelWatchFoundry_DeadMansSwitches(NULL_00000000-0000-0000-0000-000000000000, S_LOW_DeadMansSwitch11_ed0e1a9a-c273-4d57-9c60-083de0b22ad6, "LOW_Switch12");
DB_LOW_SteelWatchFoundry_DeadMansSwitches(NULL_00000000-0000-0000-0000-000000000000, S_LOW_DeadMansSwitch12_8c7b921f-8cd9-420f-a80b-06a4f26f14ed, "LOW_Switch13");
DB_LOW_SteelWatchFoundry_DeadMansSwitches(NULL_00000000-0000-0000-0000-000000000000, S_LOW_DeadMansSwitch13_a70f3617-10a1-412f-8766-975fe370fa32, "LOW_Switch14");
DB_LOW_SteelWatchFoundry_DeadMansSwitches(NULL_00000000-0000-0000-0000-000000000000, S_LOW_DeadMansSwitch14_e22874c8-f274-4521-a22d-19153fa9be91, "LOW_Switch15");
DB_LOW_SteelWatchFoundry_RoomTriggers(S_LOW_BrainRoom_4ecb872a-e992-4b75-bd61-e7f9d79217ff);
DB_LOW_SteelWatchFoundry_RoomTriggers(S_LOW_ControlCentre_c8a971a6-b8b2-4706-ada4-dfaf6ec41f1c);
DB_LOW_SteelWatchFoundry_RoomTriggers(S_LOW_InstallationRoom_ca9a227a-afc2-4dc9-9984-41e6bb8baefd);
DB_LOW_SteelWatchFoundry_RoomTriggers(S_LOW_SecurityOffice_57e9fbdb-91d8-4b17-b0a2-3958f939f6ba);
DB_LOW_SteelWatchFoundry_RoomTriggers(S_LOW_WelcomeOffice_def8af25-812c-4af4-a550-6252bdd313f2);
DB_LOW_SteelWatchFoundry_RoomTriggers(S_LOW_WorkRoom_7cc75beb-1004-40bb-a33c-7b8b128ae9dc);
DB_LOW_SteelWatchFoundry_RoomTriggers(S_LOW_FoundryRoof_66d955fe-3397-4fa0-ad03-442a246a3393);
DB_ItemDialog_NarratorAD(S_LOW_CrateNote_47f53af6-65b1-482b-9b09-7b4563d781b4, LOW_SteelWatchFoundry_AD_ZombieCrate_d32072f3-ce2e-2339-9386-594ffdce04f8);
DB_GLO_CharacterCorpseDialog(S_LOW_GondianWorker04_6cc09c40-6b09-4e92-ad36-4e5ad72f7c43, LOW_SteelWatchFoundry_Dead_GondianWorker04_2bcb9a73-18a1-1c2b-a1be-97397ee66e8d);
DB_CustomDialogRange(S_LOW_GondianWorker08_Leader_3607ec31-f939-41aa-a7d2-e32f8c46979d, 100);
TriggerRegisterForCharacter(S_LOW_InstallationRoom_ca9a227a-afc2-4dc9-9984-41e6bb8baefd, S_LOW_GondianWorker08_Leader_3607ec31-f939-41aa-a7d2-e32f8c46979d);
PROC_TriggerRegisterForPlayers(S_LOW_InstallationRoom_ca9a227a-afc2-4dc9-9984-41e6bb8baefd);
DB_DoNotFace(S_LOW_GondianWorker04_6cc09c40-6b09-4e92-ad36-4e5ad72f7c43);
DB_LOW_SteelWatchFoundry_ClueADZones(S_LOW_ClueADZone01_64b145c0-37ce-48ac-9eb9-5793cabc54f8, LOW_SteelWatchFoundry_State_InClueADZone01_43613d79-655e-4004-b4c0-f10b278b2480, "LOW_SteelWatchFoudnry_AllPlayersLeftADClueZone01");
DB_LOW_SteelWatchFoundry_ClueADZones(S_LOW_ClueADZone02_d5943fcb-aa49-45e0-9df5-07400d4e228a, LOW_SteelWatchFoundry_State_InClueADZone02_8866f134-fc4a-488f-b4d2-6f8e4469d21b, "LOW_SteelWatchFoudnry_AllPlayersLeftADClueZone02");
DB_LOW_SteelWatchFoundry_ClueADZones(S_LOW_ClueADZone03_7fb2de44-7af0-485b-a3bf-ca34f8745f70, LOW_SteelWatchFoundry_State_InClueADZone03_a6a84b57-9dd6-4a82-a1b5-d95dc2a958e4, "LOW_SteelWatchFoudnry_AllPlayersLeftADClueZone03");
DB_LOW_SteelWatchFoundry_ClueADZones(S_LOW_ChattingADTrigger_4cc93ca9-937b-49b5-936b-f0c6a2d764f7, LOW_SteelWatchFoundry_State_InClueADZone04_6a07ab54-b44c-4d11-a50d-d169a04fb4f7, "LOW_SteelWatchFoudnry_AllPlayersLeftADClueZone04");
DB_LOW_SteelWatchFoundry_ClueADZones(S_LOW_ClueADZone05_0fc302c1-3d53-42ff-b178-bcaf7081a6f5, LOW_SteelWatchFoundry_State_InClueADZone05_febe1cab-1747-41d9-9bbe-63111f3aaaba, "LOW_SteelWatchFoudnry_AllPlayersLeftADClueZone04");
DB_LOW_SteelWatchFoundry_ClueADZones(S_LOW_ClueADZone06_f02b7e20-3a2b-4e53-b0fd-8c6c27f9febf, LOW_SteelWatchFoundry_State_InClueADZone06_ac924be9-321b-48e5-802d-d92d473538d7, "LOW_SteelWatchFoudnry_AllPlayersLeftADClueZone04");
DB_LOW_SteelWatchFoundry_ClueADZones(S_LOW_ClueADZone07_7f5cd78a-92aa-4166-a495-00a388e94b7b, LOW_SteelWatchFoundry_State_InClueADZone07_2682dfeb-9e47-403b-bf78-5cab0a9f988c, "LOW_SteelWatchFoudnry_AllPlayersLeftADClueZone04");
DB_DoNotFaceDialog(S_LOW_GondianWorker09_2fb2c297-3c00-4b98-8412-41aea0087db5, LOW_SteelWatchFoundry_AD_GondianWorker09Begs_5bfae6bb-b132-10d0-780f-4e02bcc07f42);
DB_DoNotFaceDialog(S_LOW_GondianWorker04_6cc09c40-6b09-4e92-ad36-4e5ad72f7c43, LOW_SteelWatchFoundry_AD_BaneiteTaunt_c8bf1b10-d3ae-8dcd-994e-bceb48e8e8ea);
PROC_TriggerRegisterForPlayers(S_LOW_InstallationRoom_ca9a227a-afc2-4dc9-9984-41e6bb8baefd);
DB_KnowledgeCheckItem_AD("LOW_SteelWatchFoundry_Engine", S_LOW_SubmersibleEngine_6b8a7876-b8df-8622-1316-8170ca13c531, "Intelligence", Act3_Medium_77cee1c4-384a-4217-b670-67db3c7add57, LOW_SteelWatchFoundry_PAD_SubmersiblePart_432a591e-35f7-5621-aa81-9d810f3827f9, LOW_SteelWatchFoundry_Event_SubComponentIdentified_ee66f17d-aa50-42ff-a923-eb1e5debd123);
DB_GLO_CharacterCorpseDialog(S_LOW_DeadGondian_41a7f5e2-c2d2-4fce-9fbb-4d534993e0b3, LOW_SteelWatchFoundry_Dead_DeadGondian_d23904e8-add1-e0e2-2614-538a15affe45);
DB_LOW_SteelWatchFoundry_IRNClueDocs(S_LOW_BeastmasterDocument_fb97e4c4-e5ff-4625-9fc4-e336834d65af);
DB_LOW_SteelWatchFoundry_IRNClueDocs(S_LOW_BaneiteRequestForm_4e16bbeb-64e3-4b80-8cb4-2be4512af25f);
DB_LOW_SteelWatchFoundry_IRNClueDocs(S_LOW_GuardRotation_99fa91fb-20db-42fc-8fa1-70d25fb3f636);
DB_LOW_SteelWatchFoundry_IRNClueDocs(S_LOW_ProductionTrackingBook_d1278612-ef55-4596-abfe-b3ec5bd08234);
DB_LOW_SteelWatchFoundry_OperatingZombies(S_LOW_OperatingZombie_02_58d31262-f5e4-4fe2-8603-af16f5846ab7, S_LOW_OperatingTable_02_0ef8db08-9d9b-400c-870f-fa4c9b2b245c);
DB_LOW_SteelWatchFoundry_ZombieCommentItems(S_LOW_BeahededZombie_bce58ce0-cbee-4514-9c87-290805b0f341, LOW_SteelWatchFoundry_PAD_OperatingTableZombieComment_2adbba03-82a4-3de2-96ba-6600770911b6);
DB_LOW_SteelWatchFoundry_ZombieCommentItems(S_LOW_ZombieHead_71380e99-dc4d-43b6-8739-16e814145261, LOW_SteelWatchFoundry_PAD_OperatingTableZombieComment_2adbba03-82a4-3de2-96ba-6600770911b6);
DB_LOW_SteelWatchFoundry_ZombieCommentItems(S_LOW_ZombieInWatcher_2d9c33c4-b699-49f4-a7c1-4158b3119926, LOW_SteelWatchFoundry_PAD_WatcherZombieComment_70307249-1fa2-136d-7107-8b046bc62078);
DB_HasItemEvent(S_LOW_KeyToControlCentre_a7a31259-8e33-4fb7-810b-028de14b3571, LOW_SteelWatchFoundry_State_AlarmDoor_HasKey_1004ec43-6bf9-48dd-a6a0-426f6e9c273a);
DB_HasItemTemplateScriptFlag(1, LOW_SteelWatchFoundry_AlarmDoor_5e0d8f7b-07fd-1fa6-9589-a3fc1775efd7, TOOL_GEN_ThievesTools_A_Closed_A_08851ac0-3bfa-44f3-80c6-6ab0536f0e10, 2, 1);
DB_HasItemTemplateScriptFlag(2, LOW_SteelWatchFoundry_AlarmDoor_5e0d8f7b-07fd-1fa6-9589-a3fc1775efd7, TOOL_GEN_ThievesTools_A_Open_A_e32a200c-5b63-414d-ae57-00e7b38f125b, 2, 1);
DB_FlagReactionAfterDialog(LOW_SteelWatchFoundry_Event_AlarmDoor_TriggeredBy_4e69be13-f88b-4d31-b2ca-d39290149d62, LOW_SteelWatchFoundry_AlarmDoor_5e0d8f7b-07fd-1fa6-9589-a3fc1775efd7);
DB_OneShot_ADTrigger(S_LOW_ToobinComment_Lab_7483ee04-f125-4ed2-aeb9-54666b25ce23, LOW_SteelWatchFoundry_AD_ToobinLabComment_3860c5fe-5fc9-361a-340a-6ec03883a52f, S_LOW_GondianWorker08_Leader_3607ec31-f939-41aa-a7d2-e32f8c46979d);
DB_OneShot_ADTrigger(S_LOW_ToobinComment_Zombies_76959419-0fdd-450f-a086-9e9dcda5f071, LOW_SteelWatchFoundry_AD_ToobinZombieComment_3e3deb7f-3f80-7428-5dc9-4e365866230c, S_LOW_GondianWorker08_Leader_3607ec31-f939-41aa-a7d2-e32f8c46979d);
DB_OneShot_ADTrigger(S_LOW_ToobinComment_Door_c33765a3-b1d5-4cc0-a6ab-04426ceaf95c, LOW_SteelWatchFoundry_AD_ToobinDoorComment_0ae93698-850f-76f5-7508-7f1446bc75bc, S_LOW_GondianWorker08_Leader_3607ec31-f939-41aa-a7d2-e32f8c46979d);

KBSECTION
IF
DB_LOW_SteelWatchFoundry_RoomTriggers(_Var1, _Var1, _Var1, _Var1, _Var1)
AND
DB_LOW_Baneites(_Var2, _Var1, _Var1, _Var1, _Var1)
THEN
TriggerRegisterForCharacter(_Var1, _Var2);

IF
DB_PermaDefeated(_Var1, _Var1, _Var1, _Var1, _Var1)
AND
DB_LOW_Baneites(_Var1, _Var1, _Var1, _Var1, _Var1)
AND
DB_LOW_SteelWatchFoundry_RoomTriggers(_Var2, _Var1, _Var1, _Var1, _Var1)
THEN
TriggerUnregisterForCharacter(_Var2, _Var1);

IF
DB_LOW_SteelWatchFoundry_RoomTriggers(_Var1, _Var1, _Var1, _Var1, _Var1)
AND
DB_LOW_Gondians(_Var2, _Var1, _Var1, _Var1, _Var1)
THEN
TriggerRegisterForCharacter(_Var1, _Var2);

IF
DB_PermaDefeated(_Var1, _Var1, _Var1, _Var1, _Var1)
AND
DB_LOW_Gondians(_Var1, _Var1, _Var1, _Var1, _Var1)
AND
DB_LOW_SteelWatchFoundry_RoomTriggers(_Var2, _Var1, _Var1, _Var1, _Var1)
THEN
TriggerUnregisterForCharacter(_Var2, _Var1);

IF
DB_LOW_SteelWatchFoundry_RoomTriggers(_Var1, _Var1, _Var1, _Var1, _Var1)
THEN
PROC_TriggerRegisterForPlayers(_Var1);
DB_DangerZone(_Var1, "LOW_SteelWatchFoundry");

IF
DB_LOW_LabBaneites(_Var1, _Var1, _Var1, _Var1, _Var1)
THEN
DB_GLO_DefeatCounter(_Var1, "LOW_SteelWatchFoundry_InstallLabBaneites");

IF
CharacterDisarmed((CHARACTER)_Var1, (ITEM)_Var2, _, (CHARACTER)_Var1, (CHARACTER)_Var1)
AND
GetTemplate(_Var2, _Var4, _Var1, _Var1, _Var1)
AND
_Var4 == QUEST_LOW_DeadMansSwitch_Shield_10d9e4a8-8019-47a9-88e3-dac74f7b8ae5
AND
DB_LOW_SteelWatchFoundry_DeadMansSwitches(_Var1, _Var5, _Var6, _Var1, _Var1)
AND
GetClosestAlivePlayer(_Var1, _Var7, _, _Var1, _Var1)
THEN
PROC_LOW_SteelWatchFoundry_ActivateKillSwitch(_Var1, _Var5, _Var6, _Var7);

IF
RemovedFrom((GUIDSTRING)_Var1, (GUIDSTRING)_Var2, (GUIDSTRING)_Var1, (GUIDSTRING)_Var1, (GUIDSTRING)_Var1)
THEN
PROC_DisappearEquipableSwitch(_Var2, _Var1);

PROC
PROC_DisappearEquipableSwitch((CHARACTER)_Var1, (ITEM)_Var2, (CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1)
AND
DB_LOW_SteelWatchFoundry_DeadMansSwitches(_Var1, _Var2, _, _Var1, _Var1)
AND
GetItemByTemplateInInventory(QUEST_LOW_DeadMansSwitch_Shield_10d9e4a8-8019-47a9-88e3-dac74f7b8ae5, _Var1, _Var4, _Var1, _Var1)
THEN
Unequip(_Var1, _Var4);
ToInventory(_Var4, LOW_SteelWatchFoundry_AsylumChest_34e06174-ee14-40fe-9367-d63303ae86ee, 1, 0, 1);

IF
KilledBy((CHARACTER)_Var1, (CHARACTER)_Var2, _, _, (CHARACTER)_Var1)
AND NOT
DB_GlobalFlag(LOW_SteelWatchFoundry_State_KillSwitchDestroyedIRN_7d083a0a-4f0d-4ebb-aab5-fb45c90b5c95, _Var1, _Var1, _Var1, _Var1)
AND
DB_LOW_SteelWatchFoundry_DeadMansSwitches(_Var1, _, _, _Var1, _Var1)
THEN
DB_LOW_SteelWatchFoundry_BaniteKilledBy(_Var1, _Var2);

IF
DB_Defeated(_Var1, _Var1, _Var1, _Var1, _Var1)
AND NOT
DB_GlobalFlag(LOW_SteelWatchFoundry_State_KillSwitchDestroyedIRN_7d083a0a-4f0d-4ebb-aab5-fb45c90b5c95, _Var1, _Var1, _Var1, _Var1)
AND
DB_LOW_SteelWatchFoundry_DeadMansSwitches(_Var1, _Var2, _Var3, _Var1, _Var1)
AND NOT
DB_LOW_SteelWatchFoundry_SwitchDisarmedBy(_Var2, _, _Var1, _Var1, _Var1)
AND
IsInInventoryOf(_Var2, _Var1, 1, _Var1, _Var1)
AND
DB_LOW_SteelWatchFoundry_BaniteKilledBy(_Var1, _Var5, _Var1, _Var1, _Var1)
THEN
PROC_LOW_SteelWatchFoundry_ActivateKillSwitch(_Var1, _Var2, _Var3, _Var5);

IF
DB_Defeated(_Var1, _Var1, _Var1, _Var1, _Var1)
AND NOT
DB_GlobalFlag(LOW_SteelWatchFoundry_State_KillSwitchDestroyedIRN_7d083a0a-4f0d-4ebb-aab5-fb45c90b5c95, _Var1, _Var1, _Var1, _Var1)
AND
DB_LOW_SteelWatchFoundry_DeadMansSwitches(_Var1, _Var2, _Var3, _Var1, _Var1)
AND NOT
DB_LOW_SteelWatchFoundry_SwitchDisarmedBy(_Var2, _, _Var1, _Var1, _Var1)
AND
IsInInventoryOf(_Var2, _Var1, 1, _Var1, _Var1)
AND NOT
DB_LOW_SteelWatchFoundry_BaniteKilledBy(_Var1, _, _Var1, _Var1, _Var1)
AND
GetClosestAlivePlayer(_Var1, _Var6, _, _Var1, _Var1)
THEN
PROC_LOW_SteelWatchFoundry_ActivateKillSwitch(_Var1, _Var2, _Var3, _Var6);

IF
UseStarted((CHARACTER)_Var1, (ITEM)_Var2, (CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1)
AND
DB_LOW_SteelWatchFoundry_DeadMansSwitches(_Var3, _Var2, _Var4, _Var1, _Var1)
AND NOT
DB_LOW_SteelWatchFoundry_ActiveSwitch(_Var2, _Var1, _Var1, _Var1, _Var1)
AND NOT
DB_GlobalFlag(LOW_SteelWatchFoundry_State_KillSwitchDestroyedIRN_7d083a0a-4f0d-4ebb-aab5-fb45c90b5c95, _Var1, _Var1, _Var1, _Var1)
AND NOT
IsInInventoryOf(_Var2, _Var3, 1, _Var1, _Var1)
AND NOT
DB_LOW_SteelWatchFoundry_SwitchDisarmedBy(_Var2, _, _Var1, _Var1, _Var1)
THEN
PROC_LOW_SteelWatchFoundry_ActivateKillSwitch(_Var1, _Var2, _Var4, _Var1);
DB_LOW_SteelWatchFoundry_PlayerActivatedSwitch(_Var1, _Var2);

IF
CastedSpell((CHARACTER)_Var1, "Shout_LOW_SteelWatchFoundry_ActivateCollarDetonation", _, _, _)
AND
DB_LOW_SteelWatchFoundry_DeadMansSwitches(_Var1, _Var5, _Var6, _Var1, _Var1)
AND NOT
DB_LOW_SteelWatchFoundry_ActiveSwitch(_Var5, _Var1, _Var1, _Var1, _Var1)
AND NOT
DB_GlobalFlag(LOW_SteelWatchFoundry_State_KillSwitchDestroyedIRN_7d083a0a-4f0d-4ebb-aab5-fb45c90b5c95, _Var1, _Var1, _Var1, _Var1)
AND
IsInInventoryOf(_Var5, _Var1, 1, _Var1, _Var1)
AND NOT
DB_LOW_SteelWatchFoundry_SwitchDisarmedBy(_Var5, _, _Var1, _Var1, _Var1)
AND
GetClosestAlivePlayer(_Var1, _Var8, _, _Var1, _Var1)
THEN
PROC_LOW_SteelWatchFoundry_ActivateKillSwitch(_Var1, _Var5, _Var6, _Var8);

PROC
PROC_LOW_SteelWatchFoundry_ActivateKillSwitch((CHARACTER)_Var1, (ITEM)_Var2, (STRING)_Var3, (CHARACTER)_Var4, (CHARACTER)_Var1)
AND
GetCombatGroupID(_Var1, _Var5, _Var1, _Var1, _Var1)
AND
GetPosition(_Var1, _Var6, _Var7, _Var8, _Var1)
AND
FindValidPosition(_Var6, _Var7, _Var8, 2, _Var2, 0, _Var9, _Var10, _Var11, _Var1)
AND
RealSum(_Var10, 1.2, _Var12, _Var1, _Var1)
THEN
TeleportToPosition(_Var2, _Var9, _Var12, _Var11, "LOW_SteelWatchFoundry_SwitchDropped", 0, 0, 0, 0, 0);
PROC_DisappearEquipableSwitch(_Var1, _Var2);
SetGravity(_Var2, 0, NULL_00000000-0000-0000-0000-000000000000);
ApplyStatus(_Var2, "LEVITATE", -1, 1, NULL_00000000-0000-0000-0000-000000000000);
ApplyStatus(_Var2, "LOW_STEELWATCHFOUNDRY_INITIATIVEBOOST", -1, 1, NULL_00000000-0000-0000-0000-000000000000);
SetCanFight(_Var2, 1);
SetCanJoinCombat(_Var2, 1);
SetFaction(_Var2, ACT3_LOW_Foundry_DeadMansSwitch_0453021e-34f1-4133-a3e8-2c70bd79f204);
SetCombatGroupID(_Var2, _Var5);
PROC_EnterCombat(_Var2, _Var4);

IF
EnterCombatFailed((ITEM)_Var1, (CHARACTER)_Var2, (ITEM)_Var1, (ITEM)_Var1, (ITEM)_Var1)
AND
DB_LOW_SteelWatchFoundry_DeadMansSwitches(_, _Var1, _, _Var1, _Var1)
AND
DB_Players(_Var5, _Var1, _Var1, _Var1, _Var1)
THEN
ForceTurnBasedMode(_Var2, 1);

IF
Moved((ITEM)_Var1, (ITEM)_Var1, (ITEM)_Var1, (ITEM)_Var1, (ITEM)_Var1)
AND
DB_LOW_SteelWatchFoundry_DeadMansSwitches(_, _Var1, _, _Var1, _Var1)
THEN
SetGravity(_Var1, 0, NULL_00000000-0000-0000-0000-000000000000);
RemoveStatus(_Var1, "LEVITATE", NULL_00000000-0000-0000-0000-000000000000);

IF
EntityEvent((ITEM)_Var1, "LOW_SteelWatchFoundry_SwitchDropped", (ITEM)_Var1, (ITEM)_Var1, (ITEM)_Var1)
AND
DB_LOW_SteelWatchFoundry_DeadMansSwitches(_, _Var1, _Var3, _Var1, _Var1)
AND NOT
DB_LOW_SteelWatchFoundry_DroppedSwitch(_Var1, _Var1, _Var1, _Var1, _Var1)
THEN
DB_LOW_SteelWatchFoundry_ActiveSwitch(_Var1);
PROC_PlayLoopingAnimation(_Var1, OBJ_Use_Activate_01_42c02cc0-0503-4ca9-9ea0-45564bd0e5d4, OBJ_Idle_Activated_01_8be9179a-3dc5-4a35-bd61-33af16176cf4, OBJ_Use_Deactivate_01_bb1e8405-8773-46d1-92c8-9f42d900922b);
SetCanPickUp(_Var1, 0);
ObjectTimerLaunch(_Var1, _Var3, 12000, 0);
DB_LOW_SteelWatchFoundry_DroppedSwitch(_Var1);

IF
DB_LOW_SteelWatchFoundry_DroppedSwitch(_Var1, _Var1, _Var1, _Var1, _Var1)
AND
DB_LOW_SteelWatchFoundry_DeadMansSwitches(_Var2, _Var1, _, _Var1, _Var1)
AND NOT
DB_LOW_SteelWatchFoundry_BaniteKilledBy(_Var2, _, _Var1, _Var1, _Var1)
AND
GetClosestAlivePlayer(_Var1, _Var5, _, _Var1, _Var1)
THEN
PROC_EnterCombat(_Var1, _Var5);

IF
AttackedBy((ITEM)_Var1, (CHARACTER)_Var2, _, _, _, _, _, (ITEM)_Var1, (ITEM)_Var1, (ITEM)_Var1)
AND
DB_LOW_SteelWatchFoundry_ActiveSwitch(_Var1, _Var1, _Var1, _Var1, _Var1)
AND
DB_LOW_Gondians(_Var2, _Var1, _Var1, _Var1, _Var1)
AND
DB_LOW_SteelWatchFoundry_DeadMansSwitches(_, _Var1, _Var9, _Var1, _Var1)
THEN
PROC_LOW_DisarmSwitch(_Var1, _Var9, _Var2);

IF
EnteredCombat((ITEM)_Var1, _, (ITEM)_Var1, (ITEM)_Var1, (ITEM)_Var1)
AND
DB_LOW_SteelWatchFoundry_DroppedSwitch(_Var1, _Var1, _Var1, _Var1, _Var1)
THEN
PROC_TryStartAD(LOW_SteelWatchFoundry_AD_DeadMansSwitchWarnings_da7e4c93-f6d9-418b-fe19-6eac58103f89, _Var1);

IF
TurnStarted((ITEM)_Var1, (ITEM)_Var1, (ITEM)_Var1, (ITEM)_Var1, (ITEM)_Var1)
AND
DB_LOW_SteelWatchFoundry_ActiveSwitch(_Var1, _Var1, _Var1, _Var1, _Var1)
AND NOT
GetFlag(CRE_SteelWatchFoundry_State_SwitchADOver_dae10449-748e-27db-d021-be5d23b3a2cc, _Var1, 1, _Var1, _Var1)
THEN
PROC_TryStartAD(LOW_SteelWatchFoundry_AD_DeadMansSwitchWarnings_da7e4c93-f6d9-418b-fe19-6eac58103f89, _Var1);
SetEntityEventReal(_Var1, "GLO_CombatWait", 2);

IF
ObjectTimerFinished((ITEM)_Var1, _, (ITEM)_Var1, (ITEM)_Var1, (ITEM)_Var1)
AND
DB_LOW_SteelWatchFoundry_DeadMansSwitches(_, _Var1, _, _Var1, _Var1)
AND
DB_CurrentLevel("CTY_Main_A", _Var1, _Var1, _Var1, _Var1)
THEN
PROC_LOW_SteelWatchFoundry_KillSwitchKill();
DebugText(_Var1, "Iron Throne Exploded");

IF
ObjectTimerFinished((ITEM)_Var1, _, (ITEM)_Var1, (ITEM)_Var1, (ITEM)_Var1)
AND
DB_LOW_SteelWatchFoundry_DeadMansSwitches(_, _Var1, _, _Var1, _Var1)
AND NOT
DB_CurrentLevel("CTY_Main_A", _Var1, _Var1, _Var1, _Var1)
THEN
DB_KillSwitchTriggeredOffRegion(1);

IF
DB_KillSwitchTriggeredOffRegion(1, _, _, _, _)
AND
DB_CurrentLevel("CTY_Main_A", _, _, _, _)
AND
QRY_OnlyOnce("LOW_SteelWatchFoundry_KillSwitchOffRegionExecution", _, _, _, _)
THEN
PROC_LOW_SteelWatchFoundry_KillSwitchKill();

IF
ObjectTimerFinished((ITEM)_Var1, _, (ITEM)_Var1, (ITEM)_Var1, (ITEM)_Var1)
AND
DB_LOW_SteelWatchFoundry_PlayerActivatedSwitch(_Var3, _Var1, _Var1, _Var1, _Var1)
THEN
RealtimeObjectTimerLaunch(_Var3, "LOW_SteelWatchFoundry_PlayerActivatedKillSwitch_BaneiteHostilityTimer", 4000);

PROC
PROC_LOW_SteelWatchFoundry_KillSwitchKill()
AND
DB_Players(_Var1, _Var1, _Var1, _Var1, _Var1)
AND
QRY_OnlyOnce("LOW_SteelWatchFoundry_CollarsExplode", _Var1, _Var1, _Var1, _Var1)
THEN
RealtimeObjectTimerLaunch(_Var1, "LOW_StillWatchFoundry_BeforeCollarWaitTime", 1000);
PROC_LOW_LooseCollarsDestroy();
PROC_LOW_SteelWatchFoundry_DeactivateAllSwitches();

IF
ObjectTimerFinished((GUIDSTRING)_Var1, "LOW_StillWatchFoundry_BeforeCollarWaitTime", (GUIDSTRING)_Var1, (GUIDSTRING)_Var1, (GUIDSTRING)_Var1)
THEN
PROC_LOW_GondianCollarsGoOff();
RealtimeObjectTimerLaunch(_Var1, "LOW_StillWatchFoundry_AfterCollarWaitTime", 3000);

IF
ObjectTimerFinished(_, "LOW_StillWatchFoundry_AfterCollarWaitTime", _, _, _)
AND NOT
DB_GlobalFlag(IRN_IronThrone_State_Destroyed_91795368-af06-4b56-9ac1-b78995aa9ea9, _, _, _, _)
AND NOT
DB_KillSwitchTriggeredOffRegion(1, _, _, _, _)
THEN
PROC_LOW_SteelWatchFoundry_DestroyIronThrone();
PROC_LOW_SteelWatchFoundry_StartIRNDestructionCinematic();

PROC
PROC_LOW_SteelWatchFoundry_DestroyIronThrone()
THEN
SetFlag(LOW_SteelWatchFoundry_State_KillSwitchDestroyedIRN_7d083a0a-4f0d-4ebb-aab5-fb45c90b5c95);
SetFlag(IRN_IronThrone_State_Destroyed_91795368-af06-4b56-9ac1-b78995aa9ea9);
SetFlag(LOW_SteelWatchFoundry_State_AllIronThronePrisonersDead_4fefe27f-7cd6-44b1-9322-a57b22246271);
SetFlag(LOW_SteelWatchFoundry_State_MajorityIronThronePrisonersDead_6c40a75d-32ae-4402-a54c-062805f7ee7d);
SetFlag(LOW_SteelWatchFoundry_State_AnyIronThronePrisonersDead_5d6c4329-ee56-4084-8220-d627b716ac87);

PROC
PROC_LOW_GondianCollarsGoOff()
AND
DB_LOW_SteelWatchFoundry_Collared(_Var1, _Var1, _Var1, _Var1, _Var1)
THEN
CreateExplosion(_Var1, "Projectile_LOW_SteelWatchFoundry_CollarExplosion", -1);
Die(_Var1, 0, NULL_00000000-0000-0000-0000-000000000000, 1, 0);

IF
DB_PermaDefeated(_Var1, _Var1, _Var1, _Var1, _Var1)
AND
DB_LOW_SteelWatchFoundry_Collared(_Var1, _Var1, _Var1, _Var1, _Var1)
THEN
PROC_LOW_SteelWatchFoundry_DestroyCollar(_Var1);

PROC
PROC_LOW_SteelWatchFoundry_DestroyCollar((GUIDSTRING)_Var1, (GUIDSTRING)_Var1, (GUIDSTRING)_Var1, (GUIDSTRING)_Var1, (GUIDSTRING)_Var1)
AND
GetItemByTemplateInInventory(QUEST_LOW_SteelWatchFoundry_ExplodingCollar_47af23c3-7eb0-4a49-a4a4-f2ee5ab521c0, _Var1, _Var2, _Var1, _Var1)
THEN
ToInventory(_Var2, LOW_SteelWatchFoundry_AsylumChest_34e06174-ee14-40fe-9367-d63303ae86ee, 1, 0, 1);

PROC
PROC_LOW_LooseCollarsDestroy()
AND
DB_LOW_SteelWatchFoundry_Carrier(_Var1, _Var1, _Var1, _Var1, _Var1)
AND
GetItemByTemplateInInventory(QUEST_LOW_SteelWatchFoundry_ExplodingCollar_47af23c3-7eb0-4a49-a4a4-f2ee5ab521c0, _Var1, _Var2, _Var1, _Var1)
THEN
ToInventory(_Var2, LOW_SteelWatchFoundry_AsylumChest_34e06174-ee14-40fe-9367-d63303ae86ee, 1, 0, 1);
TemplateAddTo(QUEST_LOW_SteelWatchFoundry_DestroyedCollar_2071b74c-95b4-4490-91b7-cf5e250f22ab, _Var1, 1, 0);

PROC
PROC_LOW_LooseCollarsDestroy()
AND
DB_LOW_SteelWatchFoundry_LooseCollars(_Var1, _Var1, _Var1, _Var1, _Var1)
AND
CreateAtObject(QUEST_LOW_SteelWatchFoundry_DestroyedCollar_2071b74c-95b4-4490-91b7-cf5e250f22ab, _Var1, 0, 0, "", 1, _, _Var1, _Var1, _Var1)
THEN
PROC_SetOnStage(_Var1, 0);

PROC
PROC_LOW_SteelWatchFoundry_StartIRNDestructionCinematic()
AND
DB_Players(_Var1, _Var1, _Var1, _Var1, _Var1)
AND
IsControlled(_Var1, 1, _Var1, _Var1, _Var1)
AND
DB_LOW_SteelWatchFoundry_RoomTriggers(_Var2, _Var1, _Var1, _Var1, _Var1)
AND
DB_InRegion(_Var1, _Var2, _Var1, _Var1, _Var1)
AND
QRY_StartDialog(LOW_SteelWatchFoundry_IronThroneExplosionRumble_ad99d1cb-a428-7b58-ff84-0c35346d0d9e, _Var1, _Var1, _Var1, _Var1)
THEN
DB_NOOP(1);

PROC
PROC_LOW_SteelWatchFoundry_FailedRevolution()
AND
DB_LOW_Gondians(_Var1, _Var1, _Var1, _Var1, _Var1)
THEN
Die(_Var1, 0, NULL_00000000-0000-0000-0000-000000000000, 1, 0, 0);

PROC
PROC_LOW_SteelWatchFoundry_DeactivateAllSwitches()
AND
DB_LOW_SteelWatchFoundry_DroppedSwitch(_Var1, _Var1, _Var1, _Var1, _Var1)
AND NOT
DB_LOW_SteelWatchFoundry_SwitchDisarmedBy(_Var1, _, _Var1, _Var1, _Var1)
AND
DB_LOW_SteelWatchFoundry_DeadMansSwitches(_, _Var1, _Var4, _Var1, _Var1)
AND
DB_Players(_Var5, _Var1, _Var1, _Var1, _Var1)
THEN
StopAnimation(_Var1, 0);
ObjectTimerCancel(_Var1, _Var4);
NOT DB_LOW_SteelWatchFoundry_ActiveSwitch(_Var1);
LeaveCombat(_Var1);
SetCanFight(_Var1, 0);
SetCanJoinCombat(_Var1, 0);
SetGravity(_Var1, 0, NULL_00000000-0000-0000-0000-000000000000);
RemoveStatus(_Var1, "LEVITATE", NULL_00000000-0000-0000-0000-000000000000);
RemoveStatus(_Var1, "LOW_STEELWATCHFOUNDRY_INITIATIVEBOOST", NULL_00000000-0000-0000-0000-000000000000);

PROC
PROC_LOW_SteelWatchFoundry_DeactivateAllSwitches()
AND
DB_LOW_SteelWatchFoundry_DeadMansSwitches(_, _Var2, _Var3, _, _)
AND NOT
DB_LOW_SteelWatchFoundry_SwitchDisarmedBy(_Var2, _, _, _, _)
THEN
PROC_LOW_DisarmSwitch(_Var2, _Var3, NULL_00000000-0000-0000-0000-000000000000);

IF
UseStarted((CHARACTER)_Var1, (ITEM)_Var2, (CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1)
AND
DB_LOW_SteelWatchFoundry_DeadMansSwitches(_, _Var2, _, _Var1, _Var1)
AND NOT
DB_GlobalFlag(IRN_IronThrone_State_Destroyed_91795368-af06-4b56-9ac1-b78995aa9ea9, _Var1, _Var1, _Var1, _Var1)
AND
DB_LOW_SteelWatchFoundry_SwitchDisarmedBy(_Var2, _, _Var1, _Var1, _Var1)
THEN
DebugText(_Var1, "This is already disarmed.");

IF
UseStarted((CHARACTER)_Var1, (ITEM)_Var2, (CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1)
AND
DB_LOW_SteelWatchFoundry_DeadMansSwitches(_, _Var2, _Var4, _Var1, _Var1)
AND
DB_Players(_Var1, _Var1, _Var1, _Var1, _Var1)
AND
DB_LOW_SteelWatchFoundry_ActiveSwitch(_Var2, _Var1, _Var1, _Var1, _Var1)
AND NOT
DB_LOW_SteelWatchFoundry_SwitchDisarmedBy(_Var2, _, _Var1, _Var1, _Var1)
AND NOT
DB_LOW_SteelWatchFoundry_SwitchBeingDisarmed(_Var2, _Var1, _Var1, _Var1, _Var1)
AND NOT
GetFlag(LOW_SteelWatchFoundry_State_HasDisarmedFirstKillSwitch_9a793bd4-c517-43db-bc26-71f3d318aa23, _Var1, 1, _Var1, _Var1)
THEN
DB_LOW_SteelWatchFoundry_SwitchBeingDisarmed(_Var2);
RequestActiveRoll(_Var1, _Var2, "Intelligence", Act1_VeryEasy_8d398021-34e0-40b9-b7b2-0445f38a4c0b, "LOW_SteelWatchFoundry_DeadMansDisarm");

IF
UseStarted((CHARACTER)_Var1, (ITEM)_Var2, (CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1)
AND
DB_LOW_SteelWatchFoundry_DeadMansSwitches(_, _Var2, _Var4, _Var1, _Var1)
AND
DB_Players(_Var1, _Var1, _Var1, _Var1, _Var1)
AND
DB_LOW_SteelWatchFoundry_ActiveSwitch(_Var2, _Var1, _Var1, _Var1, _Var1)
AND NOT
DB_LOW_SteelWatchFoundry_SwitchDisarmedBy(_Var2, _, _Var1, _Var1, _Var1)
AND NOT
DB_LOW_SteelWatchFoundry_SwitchBeingDisarmed(_Var2, _Var1, _Var1, _Var1, _Var1)
AND
GetFlag(LOW_SteelWatchFoundry_State_HasDisarmedFirstKillSwitch_9a793bd4-c517-43db-bc26-71f3d318aa23, _Var1, 1, _Var1, _Var1)
THEN
PROC_LOW_DisarmSwitch(_Var2, _Var4, _Var1);

IF
RollResult("LOW_SteelWatchFoundry_DeadMansDisarm", (CHARACTER)_Var1, (ITEM)_Var2, 1, _, _, (CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1)
AND
DB_LOW_SteelWatchFoundry_DeadMansSwitches(_, _Var2, _Var6, _Var1, _Var1)
THEN
PROC_LOW_DisarmSwitch(_Var2, _Var6, _Var1);

IF
DestroyedBy((ITEM)_Var1, (CHARACTER)_Var2, _, _, (ITEM)_Var1)
AND
DB_LOW_SteelWatchFoundry_DeadMansSwitches(_, _Var1, _Var6, _Var1, _Var1)
THEN
PROC_LOW_DisarmSwitch(_Var1, _Var6, _Var2);

PROC
PROC_LOW_DisarmSwitch((ITEM)_Var1, (STRING)_Var2, (CHARACTER)_Var3, (ITEM)_Var1, (ITEM)_Var1)
THEN
NOT DB_LOW_SteelWatchFoundry_ActiveSwitch(_Var1);
ObjectTimerCancel(_Var1, _Var2);
PROC_StopLoopEffect(_Var1, _Var2);
LeaveCombat(_Var1);
SetCanFight(_Var1, 0);
SetCanJoinCombat(_Var1, 0);
DebugText(_Var1, "Successfuly disarmed.");
DB_LOW_SteelWatchFoundry_SwitchDisarmedBy(_Var1, _Var3);
SetGravity(_Var1, 0, NULL_00000000-0000-0000-0000-000000000000);
RemoveStatus(_Var1, "LEVITATE", NULL_00000000-0000-0000-0000-000000000000);
RemoveStatus(_Var1, "LOW_STEELWATCHFOUNDRY_INITIATIVEBOOST", NULL_00000000-0000-0000-0000-000000000000);
StopAnimation(_Var1, 0);
SetCanInteract(_Var1, 0);

PROC
PROC_LOW_DisarmSwitch((ITEM)_Var1, (STRING)_Var2, (CHARACTER)_Var3, (ITEM)_Var1, (ITEM)_Var1)
AND
DB_LOW_SteelWatchFoundry_PlayerActivatedSwitch(_Var4, _Var1, _Var1, _Var1, _Var1)
THEN
NOT DB_LOW_SteelWatchFoundry_PlayerActivatedSwitch(_Var4, _Var1);

PROC
PROC_LOW_DisarmSwitch((ITEM)_Var1, (STRING)_Var2, (CHARACTER)_Var3, (ITEM)_Var1, (ITEM)_Var1)
AND
DB_Players(_Var3, _Var1, _Var1, _Var1, _Var1)
THEN
SetFlag(LOW_SteelWatchFoundry_State_HasDisarmedFirstKillSwitch_9a793bd4-c517-43db-bc26-71f3d318aa23, _Var3, 0);
PROC_TryStartAD(LOW_SteelWatchFoundry_PAD_DeadMansSwitchDisarmed_b3ef1c41-48bb-aec4-6240-f5a39ed106ea, _Var3);

IF
RollResult("LOW_SteelWatchFoundry_DeadMansDisarm", (CHARACTER)_Var1, (GUIDSTRING)_Var2, 0, _, _, (CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1)
AND
DB_CurrentLevel("CTY_Main_A", _Var1, _Var1, _Var1, _Var1)
THEN
PROC_LOW_SteelWatchFoundry_KillSwitchKill();

IF
RollResult("LOW_SteelWatchFoundry_DeadMansDisarm", (CHARACTER)_Var1, (GUIDSTRING)_Var2, 0, _, _, (CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1)
AND NOT
DB_CurrentLevel("CTY_Main_A", _Var1, _Var1, _Var1, _Var1)
THEN
DB_KillSwitchTriggeredOffRegion(1);

IF
RollResult("LOW_SteelWatchFoundry_DeadMansDisarm", (CHARACTER)_Var1, (ITEM)_Var2, 0, _, _, (CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1)
AND
DB_LOW_SteelWatchFoundry_PlayerActivatedSwitch(_, _Var2, _Var1, _Var1, _Var1)
THEN
RealtimeObjectTimerLaunch(_Var1, "LOW_SteelWatchFoundry_PlayerActivatedKillSwitch_BaneiteHostilityTimer", 4000);

IF
ObjectTimerFinished(_, "LOW_SteelWatchFoundry_PlayerActivatedKillSwitch_BaneiteHostilityTimer", (GUIDSTRING)_, (GUIDSTRING)_, (GUIDSTRING)_)
THEN
PROC_SetRelationToPlayers(ACT3_LOW_SteelWatchFoundry_Banites_Workroom_1d8980ed-53a1-40ad-b0a5-346b5d3dc3d6, 0);

IF
RollResult("LOW_SteelWatchFoundry_DeadMansDisarm", (CHARACTER)_Var1, (ITEM)_Var2, _, _, _, (CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1)
THEN
NOT DB_LOW_SteelWatchFoundry_SwitchBeingDisarmed(_Var2);

IF
UseStarted((CHARACTER)_Var1, (ITEM)_Var2, (CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1)
AND
DB_LOW_SteelWatchFoundry_DeadMansSwitches(_, _Var2, _, _Var1, _Var1)
AND
DB_GlobalFlag(LOW_SteelWatchFoundry_State_KillSwitchDestroyedIRN_7d083a0a-4f0d-4ebb-aab5-fb45c90b5c95, _Var1, _Var1, _Var1, _Var1)
THEN
DebugText(_Var1, "The Iron Throne is already destroyed. This serves no purpuse any more.");

IF
UseStarted((CHARACTER)_Var1, (ITEM)_Var2, (CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1)
AND NOT
DB_GlobalFlag(LOW_SteelWatchFoundry_State_KillSwitchDestroyedIRN_7d083a0a-4f0d-4ebb-aab5-fb45c90b5c95, _Var1, _Var1, _Var1, _Var1)
AND
DB_LOW_SteelWatchFoundry_SwitchBeingDisarmed(_Var2, _Var1, _Var1, _Var1, _Var1)
THEN
DebugText(_Var1, "Only one person can work on it at a time.");

IF
DB_LOW_SteelWatchFoundry_ClueADZones(_Var1, _, _, _Var1, _Var1)
THEN
PROC_TriggerRegisterForPlayers(_Var1);

IF
EnteredTrigger((CHARACTER)_Var1, (TRIGGER)_Var2, (CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1)
AND
DB_LOW_SteelWatchFoundry_ClueADZones(_Var2, _Var3, _Var4, _Var1, _Var1)
AND
DB_Players(_Var1, _Var1, _Var1, _Var1, _Var1)
AND NOT
DB_GlobalFlag(_Var3, _Var1, _Var1, _Var1, _Var1)
THEN
SetFlag(_Var3);
DB_TriggerEvents_AllPlayersLeft(_Var2, _Var4);

IF
EntityEvent(_, (STRING)_Var2, _, _, _)
AND
DB_LOW_SteelWatchFoundry_ClueADZones(_, _Var4, _Var2, _, _)
THEN
ClearFlag(_Var4);

IF
UseFinished(_, (ITEM)_Var2, 1, _, _)
AND
DB_LOW_SteelWatchFoundry_IRNClueDocs(_Var2, _, _, _, _)
THEN
SetFlag(LOW_SteelWatchFoundry_State_IRNLocationDiscovered_02ea0627-74cc-486c-9d30-f96483374711);

IF
LevelLoaded("CTY_Main_A", (CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1)
AND
DB_LOW_SteelWatchFoundry_OperatingZombies(_Var1, _Var2, _Var1, _Var1, _Var1)
AND NOT
DB_Defeated(_Var1, _Var1, _Var1, _Var1, _Var1)
THEN
Use(_Var1, _Var2, 1, 1, "LOW_SteelWatchFoundry_ZombieLaidDown");

IF
EntityEvent((GUIDSTRING)_Var1, "LOW_SteelWatchFoundry_ZombieLaidDown", (GUIDSTRING)_Var1, (GUIDSTRING)_Var1, (GUIDSTRING)_Var1)
THEN
ApplyStatus(_Var1, "LOW_STEELWATCHFOUNDRY_UNDEROPERATION", -1, 1, NULL_00000000-0000-0000-0000-000000000000);

IF
UseStarted((CHARACTER)_Var1, (ITEM)_Var2, (CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1)
AND
DB_LOW_SteelWatchFoundry_ZombieCommentItems(_Var2, _Var3, _Var1, _Var1, _Var1)
THEN
PROC_TryStartAD(_Var3, _Var1);

PROC
PROC_BlockUseOfItem((CHARACTER)_Var1, S_LOW_DoorToControlCentre_cc6552ec-c827-4708-bc18-9fe54b96a507, (CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1)
AND NOT
DB_GlobalFlag(LOW_SteelWatchFoundry_Event_AlarmDoor_AlarmTriggered_2a24e365-08b2-4f33-8454-b966e0f243cd, _Var1, _Var1, _Var1, _Var1)
AND NOT
DB_GlobalFlag(LOW_SteelWatchFoundry_State_AlarmDoodr_AlarmDisabled_5c6be4c7-029f-4c30-b765-a251668dafec, _Var1, _Var1, _Var1, _Var1)
AND NOT
GetFlag(LOW_SteelWatchFoundry_State_AlarmDoor_HasKey_1004ec43-6bf9-48dd-a6a0-426f6e9c273a, _Var1, 1, _Var1, _Var1)
AND
QRY_StartDialog(LOW_SteelWatchFoundry_AlarmDoor_5e0d8f7b-07fd-1fa6-9589-a3fc1775efd7, S_LOW_DoorToControlCentre_cc6552ec-c827-4708-bc18-9fe54b96a507, _Var1, _Var1, _Var1)
THEN
DB_CustomUseItemResponse(_Var1, S_LOW_DoorToControlCentre_cc6552ec-c827-4708-bc18-9fe54b96a507, 0);

IF
DB_GlobalFlag(LOW_SteelWatchFoundry_State_AlarmDoor_Unlocked_8e3da6aa-e186-43d9-a8ac-a9eb2e5f8ee2, _, _, _, _)
THEN
Unlock(S_LOW_DoorToControlCentre_cc6552ec-c827-4708-bc18-9fe54b96a507);

PROC
PROC_FlagReactionAfterDialog((CHARACTER)_Var1, LOW_SteelWatchFoundry_Event_AlarmDoor_TriggeredBy_4e69be13-f88b-4d31-b2ca-d39290149d62, (CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1)
AND
QRY_OnlyOnce("LOW_SteelWatchFoundry_DoorAlarmTriggered", _Var1, _Var1, _Var1, _Var1)
THEN
PROC_SteelWatchFoundry_TriggerAlarmOn(_Var1);

PROC
PROC_SteelWatchFoundry_TriggerAlarmOn((CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1)
AND
DB_LOW_LabBaneites(_Var2, _Var1, _Var1, _Var1, _Var1)
THEN
CharacterMoveTo(_Var2, S_LOW_DoorAlarm_AttentionPoint_ceb933c6-e79b-48cd-9fba-5daef27d150c, "Sprint", "");

PROC
PROC_SteelWatchFoundry_TriggerAlarmOn((CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1)
AND NOT
DB_GlobalFlag(IRN_IronThrone_State_Destroyed_91795368-af06-4b56-9ac1-b78995aa9ea9, _Var1, _Var1, _Var1, _Var1)
AND
DB_LOW_LabBaneites(_Var2, _Var1, _Var1, _Var1, _Var1)
AND
DB_LOW_SteelWatchFoundry_DeadMansSwitches(_Var2, _Var3, _Var4, _Var1, _Var1)
THEN
PROC_LOW_SteelWatchFoundry_ActivateKillSwitch(_Var2, _Var3, _Var4, _Var1);

PROC
PROC_SteelWatchFoundry_TriggerAlarmOn((CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1)
AND
DB_GlobalFlag(IRN_IronThrone_State_Destroyed_91795368-af06-4b56-9ac1-b78995aa9ea9, _Var1, _Var1, _Var1, _Var1)
THEN
SetFlag(LOW_SteelWatchFoundry_State_AlarmDoor_AlarmDisabled_5c6be4c7-029f-4c30-b765-a251668dafec);

IF
DB_GlobalFlag(IRN_IronThrone_State_Destroyed_91795368-af06-4b56-9ac1-b78995aa9ea9, _, _, _, _)
THEN
SetFlag(LOW_SteelWatchFoundry_State_AlarmDoor_AlarmDisabled_5c6be4c7-029f-4c30-b765-a251668dafec);

IF
UsingSpellOnTarget((CHARACTER)_Var1, S_LOW_DoorToControlCentre_cc6552ec-c827-4708-bc18-9fe54b96a507, "Target_Knock", _, _, _, (CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1)
AND
QRY_OnlyOnce("LOW_SteelWatchFoundry_DoorAlarmTriggered", _Var1, _Var1, _Var1, _Var1)
THEN
SetFlag(LOW_SteelWatchFoundry_Event_AlarmDoor_TriggeredBy_4e69be13-f88b-4d31-b2ca-d39290149d62, _Var1);
SetFlag(LOW_SteelWatchFoundry_Event_AlarmDoor_AlarmTriggered_2a24e365-08b2-4f33-8454-b966e0f243cd);
PROC_SteelWatchFoundry_TriggerAlarmOn(_Var1);


EXITSECTION
ENDEXITSECTION

ParentTargetEdge "Act3b"
