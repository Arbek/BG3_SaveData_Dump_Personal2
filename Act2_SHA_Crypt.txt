Version 1
SubGoalCombiner SGC_AND

INITSECTION
DB_SHA_Crypt_FireTrapPoint(S_SHA_Crypt_FireGasPit_000_7d771e1b-1af2-47c8-990d-068b2ad2306c);
DB_SHA_Crypt_FireTrapPoint(S_SHA_Crypt_FireGasPit_003_4eeecd3b-3b89-4cd4-afa9-40f6938030d2);
DB_SHA_Crypt_FireTrapPoint(S_SHA_Crypt_FireGasPit_001_191f7674-fdc4-4ff0-aba8-11580dbdeaa7);
DB_SHA_Crypt_FireTrapPoint(S_SHA_Crypt_FireGasPit_002_112df3ce-c723-4ca0-9db7-3dd9965e0457);
DB_SHA_Crypt_FireTrapPoint(S_SHA_Crypt_FireGasPit_004_1a44c72a-28d1-4b1a-863a-494305e2effe);
DB_SHA_Crypt_FireTrapPoint(S_SHA_Crypt_FireGasPit_005_336fc292-489d-4e3c-a5f1-82ae94e88f22);
DB_SHA_Crypt_FireTrapPoint(S_SHA_Crypt_FireGasPit_006_fb58a37e-5b52-431d-a9de-928f5a6cb43b);
DB_SHA_Crypt_FireTrapPoint(S_SHA_Crypt_FireGasPit_008_d30918bb-059a-4a8d-bdb7-2c12a1745dba);
DB_SHA_Crypt_FireTrapPoint(S_SHA_Crypt_FireGasPit_009_84869eeb-bf98-4345-af18-0a857dbfe4cd);
DB_SHA_Crypt_FireTrapPoint(S_SHA_Crypt_FireGasPit_010_cadf8a0b-0250-4d1c-b65e-7922bcb4bc52);
DB_SHA_Crypt_Door(S_SHA_Crypt_DoorToChurch_6c50da0e-9302-4be5-8ca8-43679c4fdd91);
DB_SHA_Crypt_Door(S_SHA_Crypt_DoorToWestCrypt_220e44f0-85df-40d1-9519-404837d84ce8);
DB_SHA_Crypt_Door(S_SHA_Crypt_DoorToEntrance_3d4acec6-19bb-4861-8eb1-969ed2a8b7a6);
PROC_TriggerRegisterForPlayers(S_SHA_Crypt_TrapArea_8beb2e82-4b55-4f31-a8cd-31552cf45dd0);
DB_SHA_Crypt_Rings(S_SHA_EntrancePuzzle_OuterRing_Danger_223e669e-e9f6-4df4-8dec-3b0a8705c829);
DB_SHA_Crypt_Rings(S_SHA_EntrancePuzzle_InnerRing_Danger_2f063d51-9528-40da-be8d-55e16746e129);
DB_SHA_EntrancePuzzle_LightDetectors("SHA_InnerRing", S_SHA_Crypt_InnerLightDetector_000_58c09ab7-9432-4f1a-b726-2aceee9cb889);
DB_SHA_EntrancePuzzle_LightDetectors("SHA_InnerRing", S_SHA_Crypt_InnerLightDetector_005_f7f55fcd-1652-41cf-9839-be71d6629824);
DB_SHA_EntrancePuzzle_LightDetectors("SHA_InnerRing", S_SHA_Crypt_InnerLightDetector_001_81c03bd9-cd59-41a6-bed4-3cfc80bb55df);
DB_SHA_EntrancePuzzle_LightDetectors("SHA_InnerRing", S_SHA_Crypt_InnerLightDetector_007_fd3092a7-afc5-4c19-82ff-cda76768c7aa);
DB_SHA_EntrancePuzzle_LightDetectors("SHA_InnerRing", S_SHA_Crypt_InnerLightDetector_004_17f6b99f-c035-468c-a588-213f0d907ae7);
DB_SHA_EntrancePuzzle_LightDetectors("SHA_InnerRing", S_SHA_Crypt_InnerLightDetector_006_a214118f-11d8-467a-9b33-dbef575cff92);
DB_SHA_EntrancePuzzle_LightDetectors("SHA_InnerRing", S_SHA_Crypt_InnerLightDetector_003_27ec8d95-d780-4245-b346-b0d4ebda6f3f);
DB_SHA_EntrancePuzzle_LightDetectors("SHA_InnerRing", S_SHA_Crypt_InnerLightDetector_002_0a99cd21-6313-4744-8664-fcfc760c79cf);
DB_SHA_EntrancePuzzle_RingVisible("SHA_InnerRing", 1);
DB_SHA_EntrancePuzzle_LightDetectors("SHA_OuterRing", S_SHA_Crypt_OuterLightDetector_000_22da5b91-df46-4c4b-a28d-ef14c14bfd7c);
DB_SHA_EntrancePuzzle_LightDetectors("SHA_OuterRing", S_SHA_Crypt_OuterLightDetector_001_3866247e-3e33-4f14-abe9-7ea5363e15a6);
DB_SHA_EntrancePuzzle_LightDetectors("SHA_OuterRing", S_SHA_Crypt_OuterLightDetector_002_30a94eaa-357f-46f2-9ec7-525975936909);
DB_SHA_EntrancePuzzle_LightDetectors("SHA_OuterRing", S_SHA_Crypt_OuterLightDetector_003_1de7078e-6e3c-4ad0-879b-c17ff5cb66cf);
DB_SHA_EntrancePuzzle_LightDetectors("SHA_OuterRing", S_SHA_Crypt_OuterLightDetector_004_922fafbc-e197-400d-b943-66b44853e115);
DB_SHA_EntrancePuzzle_LightDetectors("SHA_OuterRing", S_SHA_Crypt_OuterLightDetector_005_9d47effb-75c3-4ebf-9408-6f1c3ffcacef);
DB_SHA_EntrancePuzzle_LightDetectors("SHA_OuterRing", S_SHA_Crypt_OuterLightDetector_006_ad2b4d59-48ba-4cf9-be35-5b5767e12583);
DB_SHA_EntrancePuzzle_LightDetectors("SHA_OuterRing", S_SHA_Crypt_OuterLightDetector_007_81d4a911-95c3-4aea-bff0-c47a28ec6973);
DB_SHA_EntrancePuzzle_RingVisible("SHA_OuterRing", 0);
DB_SHA_EntrancePuzzle_RingsVFX("SHA_InnerRing", VFX_Script_SHA_Forcefield_Inner_01_59f36fd7-fdbe-e30d-b4c0-47f8560abd02);
DB_SHA_EntrancePuzzle_RingsVFX("SHA_OuterRing", VFX_Script_SHA_Forcefield_Outer_01_d550c5d2-6a3e-6a98-0094-d64d9f81b719);
ApplyStatus(S_SHA_Crypt_DoorToChurch_6c50da0e-9302-4be5-8ca8-43679c4fdd91, "ARCANE_LOCK", -1, 1);
DB_SHA_EntrancePuzzle_Braziers("SW", S_SHA_EntranceBrazier_000_442eae3d-938b-4a0f-a5b4-cc7105d9196f, S_SHA_EntranceBrazier_000_Up_f80e166c-6d52-4b2f-83d5-388dcc4759bf, S_SHA_EntranceBrazier_000_Down_11658557-1995-4387-8e83-8937904ef98a);
DB_SHA_EntrancePuzzle_Braziers("SW", S_SHA_EntranceBrazier_001_85693e75-167d-4bf0-a239-2bd3a9e53086, S_SHA_EntranceBrazier_001_Up_b4df95a4-a7f1-4ecd-a426-8f264382fa3a, S_SHA_EntranceBrazier_001_Down_effe0def-6794-48fd-9803-272d278a078e);
DB_SHA_EntrancePuzzle_Braziers("NW", S_SHA_EntranceBrazier_002_81be976e-f569-4dee-a2ce-22688d3efc5b, S_SHA_EntranceBrazier_002_Up_2ac0c276-a670-4e03-a394-0961df5c8de1, S_SHA_EntranceBrazier_002_Down_4f11db50-5560-4539-915a-da2f4b5f0438);
DB_SHA_EntrancePuzzle_Braziers("NW", S_SHA_EntranceBrazier_003_66eb598a-86c3-4b9f-858f-9dc20119b6c8, S_SHA_EntranceBrazier_003_Up_fb8d4d17-0e9d-495d-8da7-ce3201401fbf, S_SHA_EntranceBrazier_003_Down_87f75ae2-0007-4578-9a0c-36e7fd69c408);
DB_SHA_EntrancePuzzle_Braziers("NE", S_SHA_EntranceBrazier_004_ce619660-f7f1-4dbc-9210-2f54fe67c836, S_SHA_EntranceBrazier_004_Up_c455fc62-71c6-4779-8765-cdf3ec3b0c3c, S_SHA_EntranceBrazier_004_Down_7e316a18-b8c8-49da-8eca-973ee78c212f);
DB_SHA_EntrancePuzzle_Braziers("NE", S_SHA_EntranceBrazier_005_3a50229c-e549-4620-be2e-dc2b2318cb28, S_SHA_EntranceBrazier_005_Up_d833d13b-3349-4a1f-b050-4d8613fac016, S_SHA_EntranceBrazier_005_Down_2e9fba1b-26cc-4782-8303-0d357c7feb59);
DB_SHA_EntrancePuzzle_Braziers("SE", S_SHA_EntranceBrazier_006_704acdde-4b9d-4ba2-9de6-f41c0e5c2dc3, S_SHA_EntranceBrazier_006_Up_53453a93-ad51-4f39-9f63-5ee9348f9671, S_SHA_EntranceBrazier_006_Down_2f8a458d-5f94-493f-aa55-0cf2c960f5f8);
DB_SHA_EntrancePuzzle_Braziers("SE", S_SHA_EntranceBrazier_007_2731e0a1-9386-49a4-9593-3b7599185db4, S_SHA_EntranceBrazier_007_Up_c678fabf-388a-47fe-b8b3-c32b3b5a9873, S_SHA_EntranceBrazier_007_Down_cee915c7-6f80-4fde-a9fb-8cde8274723f);
DB_SHA_EntrancePuzzle_BrazierEvents("SHA_Braziers_Up_SW", "SHA_Braziers_Down_SW", "SW");
DB_SHA_EntrancePuzzle_BrazierEvents("SHA_Braziers_Up_NW", "SHA_Braziers_Down_NW", "NW");
DB_SHA_EntrancePuzzle_BrazierEvents("SHA_Braziers_Up_NE", "SHA_Braziers_Down_NE", "NE");
DB_SHA_EntrancePuzzle_BrazierEvents("SHA_Braziers_Up_SE", "SHA_Braziers_Down_SE", "SE");
DB_OneShotPlayerTrigger(S_SHA_Crypt_StatueReaction_341e6e88-a97b-484f-bc8c-2963adcfe13a);
DB_ItemDialog_NarratorAD(S_SHA_Entrance_KethericPlaque_000_6dbdde85-3d70-4d51-95e4-9d3649712798, SHA_AD_OathPlaque2_95476455-8175-2560-a648-baee9027e405);
DB_ItemDialog_NarratorAD(S_SHA_Entrance_KethericPlaque_fa15b25e-6c61-4aa2-85a9-117bcc1e34a2, SHA_AD_OathPlaque_c585b939-a93b-b36a-d273-cc6b7387876b);
DB_ItemDialog_NarratorAD(S_SHA_Entrance_SharPlaque_5c2be9ee-7fce-47c9-a5ab-03a2adf6c50d, SHA_AD_EntranceSharPlaque_3b7c296e-d165-6f52-1d11-b1e927451495);

KBSECTION
IF
TextEvent("cryptfire", (ITEM)_Var1, (ITEM)_Var1, (ITEM)_Var1, (ITEM)_Var1)
AND
DB_SHA_Crypt_FireTrapPoint(_Var1, _Var1, _Var1, _Var1, _Var1)
THEN
SetDualEntityEvent(NULL_00000000-0000-0000-0000-000000000000, _Var1, "SHA_CryptTrap_On");

IF
TextEvent("cryptfireremove1", (ITEM)_Var1, (ITEM)_Var1, (ITEM)_Var1, (ITEM)_Var1)
AND
DB_SHA_Crypt_FireTrapPoint(_Var1, _Var1, _Var1, _Var1, _Var1)
THEN
SetDualEntityEvent(NULL_00000000-0000-0000-0000-000000000000, _Var1, "SHA_CryptTrap_Off");

PROC
PROC_OneShotTriggerEntered((GUIDSTRING)_Var1, S_SHA_Crypt_StatueReaction_341e6e88-a97b-484f-bc8c-2963adcfe13a, (GUIDSTRING)_Var1, (GUIDSTRING)_Var1, (GUIDSTRING)_Var1)
THEN
PROC_TryStartAD(SHA_TrapJunction_AD_AlarmStatues_74b4194c-6ca1-6668-a946-1caf39cfc34b, S_SHA_VoiceOfShar_EntranceVoice_a386e1ac-3650-4460-8c29-c910218e4ac4);

IF
DualEntityEvent((GUIDSTRING)_Var1, _, "SHA_Crypt_Switch1_On", (GUIDSTRING)_Var1, (GUIDSTRING)_Var1)
AND NOT
DB_SHA_Crypt_BlockFireTrap(1, _Var1, _Var1, _Var1, _Var1)
THEN
PROC_SHA_Crypt_TriggerTrap(_Var1);

PROC
PROC_SHA_Crypt_TriggerTrap((GUIDSTRING)_Var1, (GUIDSTRING)_Var1, (GUIDSTRING)_Var1, (GUIDSTRING)_Var1, (GUIDSTRING)_Var1)
AND NOT
DB_SHA_Crypt_TrapStarted(1, _Var1, _Var1, _Var1, _Var1)
AND
QRY_SHA_Crypt_TryStartTrapFTB(_Var1, _Var1, _Var1, _Var1, _Var1)
THEN
PROC_SHA_Crypt_LockDoors();
PROC_SHA_Crypt_FloodWithFire();
ObjectTimerLaunch(S_SHA_Crypt_TrapDefuser_03ba50b7-b34d-4416-9e90-72d6d8bb08c4, "SHA_Crypt_FloodTimeout", 24000);
DB_SHA_Crypt_TrapStarted(1);
PROC_TryStartAD(SHA_TrapJunction_AD_AlarmStatues_74b4194c-6ca1-6668-a946-1caf39cfc34b, S_SHA_VoiceOfShar_EntranceVoice_a386e1ac-3650-4460-8c29-c910218e4ac4);

QRY
QRY_SHA_Crypt_TryStartTrapFTB((GUIDSTRING)_Var1, (GUIDSTRING)_Var1, (GUIDSTRING)_Var1, (GUIDSTRING)_Var1, (GUIDSTRING)_Var1)
THEN
DB_NOOP(1);

QRY
QRY_SHA_Crypt_TryStartTrapFTB((CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1)
AND NOT
DB_SHA_Crypt_TrapStarted(1, _Var1, _Var1, _Var1, _Var1)
AND
QRY_SHA_Crypt_TrapTriggeredByPlayer(_Var1, _Var1, _Var1, _Var1, _Var1)
AND
IsInForceTurnBasedMode(_Var1, 0, _Var1, _Var1, _Var1)
THEN
ForceTurnBasedMode(_Var1, 1);

QRY
QRY_SHA_Crypt_TryStartTrapFTB((GUIDSTRING)_Var1, (GUIDSTRING)_Var1, (GUIDSTRING)_Var1, (GUIDSTRING)_Var1, (GUIDSTRING)_Var1)
AND NOT
DB_SHA_Crypt_TrapStarted(1, _Var1, _Var1, _Var1, _Var1)
AND NOT
QRY_SHA_Crypt_TrapTriggeredByPlayer(_Var1, _Var1, _Var1, _Var1, _Var1)
AND
GetClosestAlivePlayer(_Var1, _Var2, _Var3, _Var1, _Var1)
AND
_Var3 < 30
AND
IsInForceTurnBasedMode(_Var2, 0, _Var1, _Var1, _Var1)
THEN
ForceTurnBasedMode(_Var2, 1);

QRY
QRY_SHA_Crypt_TrapTriggeredByPlayer((CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1, (CHARACTER)_Var1)
AND
IsCharacter(_Var1, 1, _Var1, _Var1, _Var1)
AND
DB_Players(_Var1, _Var1, _Var1, _Var1, _Var1)
THEN
DB_NOOP(1);

PROC
PROC_SHA_Crypt_LockDoors()
AND
DB_SHA_Crypt_Door(_Var1, _Var1, _Var1, _Var1, _Var1)
AND
IsClosed(_Var1, 1, _Var1, _Var1, _Var1)
THEN
DB_SHA_Crypt_DoorsPreviousState(_Var1, "closed");

IF
Opened((ITEM)_Var1, (ITEM)_Var1, (ITEM)_Var1, (ITEM)_Var1, (ITEM)_Var1)
AND
DB_SHA_Crypt_DoorsPreviousState(_Var1, "closed", _Var1, _Var1, _Var1)
THEN
NOT DB_SHA_Crypt_DoorsPreviousState(_Var1, "closed");

IF
Closed((ITEM)_Var1, (ITEM)_Var1, (ITEM)_Var1, (ITEM)_Var1, (ITEM)_Var1)
AND
DB_SHA_Crypt_DoorsPreviousState(_Var1, "open", _Var1, _Var1, _Var1)
THEN
NOT DB_SHA_Crypt_DoorsPreviousState(_Var1, "open");

PROC
PROC_SHA_Crypt_LockDoors()
AND
DB_SHA_Crypt_Door(_Var1, _Var1, _Var1, _Var1, _Var1)
AND
IsClosed(_Var1, 0, _Var1, _Var1, _Var1)
THEN
DB_SHA_Crypt_DoorsPreviousState(_Var1, "open");

PROC
PROC_SHA_Crypt_LockDoors()
AND
DB_SHA_Crypt_Door(_Var1, _Var1, _Var1, _Var1, _Var1)
AND
IsLocked(_Var1, 1, _Var1, _Var1, _Var1)
THEN
DB_SHA_Crypt_DoorsPreviousState(_Var1, "locked");

IF
Unlocked((ITEM)_Var1, _, _, (ITEM)_Var1, (ITEM)_Var1)
AND
DB_SHA_Crypt_DoorsPreviousState(_Var1, "locked", _Var1, _Var1, _Var1)
THEN
NOT DB_SHA_Crypt_DoorsPreviousState(_Var1, "locked");

PROC
PROC_SHA_Crypt_LockDoors()
AND
DB_SHA_Crypt_Door(_Var1, _Var1, _Var1, _Var1, _Var1)
AND
IsLocked(_Var1, 0, _Var1, _Var1, _Var1)
THEN
DB_SHA_Crypt_DoorsPreviousState(_Var1, "unlocked");

PROC
PROC_SHA_Crypt_LockDoors()
AND
DB_SHA_Crypt_Door(_Var1, _Var1, _Var1, _Var1, _Var1)
THEN
PROC_ItemCloseAndLock(_Var1, "storylock");

PROC
PROC_SHA_Crypt_FloodWithFire()
AND
DB_SHA_Crypt_FireTrapPoint(_Var1, _Var1, _Var1, _Var1, _Var1)
THEN
SetDualEntityEvent(NULL_00000000-0000-0000-0000-000000000000, _Var1, "SHA_CryptTrap_On");

IF
ObjectTimerFinished(_, "SHA_Crypt_FloodTimeout", _, _, _)
AND
DB_SHA_Crypt_TrapStarted(1, _, _, _, _)
THEN
PROC_SHA_Crypt_EndTrap();

IF
Opened((ITEM)_Var1, (ITEM)_Var1, (ITEM)_Var1, (ITEM)_Var1, (ITEM)_Var1)
AND
DB_SHA_Crypt_Door(_Var1, _Var1, _Var1, _Var1, _Var1)
AND
DB_SHA_Crypt_TrapStarted(1, _Var1, _Var1, _Var1, _Var1)
THEN
PROC_SHA_Crypt_EndTrap();

PROC
PROC_SHA_Crypt_EndTrap()
THEN
NOT DB_SHA_Crypt_TrapStarted(1);
SetFlag(SHA_Crypt_State_TrapFinished_d042eb9d-d346-4543-8701-25cf152b1d22, NULL_00000000-0000-0000-0000-000000000000);
PROC_SHA_Crypt_RestoreDoorsState();

PROC
PROC_SHA_Crypt_EndTrap()
AND
DB_SHA_Crypt_FireTrapPoint(_Var1, _Var1, _Var1, _Var1, _Var1)
THEN
SetDualEntityEvent(NULL_00000000-0000-0000-0000-000000000000, _Var1, "SHA_CryptTrap_Off");

PROC
PROC_SHA_Crypt_RestoreDoorsState()
AND
DB_SHA_Crypt_DoorsPreviousState(_Var1, "locked", _Var1, _Var1, _Var1)
THEN
NOT DB_SHA_Crypt_DoorsPreviousState(_Var1, "locked");

PROC
PROC_SHA_Crypt_RestoreDoorsState()
AND
DB_SHA_Crypt_DoorsPreviousState(_Var1, "unlocked", _Var1, _Var1, _Var1)
THEN
NOT DB_SHA_Crypt_DoorsPreviousState(_Var1, "unlocked");
Unlock(_Var1);

PROC
PROC_SHA_Crypt_RestoreDoorsState()
AND
DB_SHA_Crypt_DoorsPreviousState(_Var1, "closed", _Var1, _Var1, _Var1)
THEN
NOT DB_SHA_Crypt_DoorsPreviousState(_Var1, "closed");

PROC
PROC_SHA_Crypt_RestoreDoorsState()
AND
DB_SHA_Crypt_DoorsPreviousState(_Var1, "open", _Var1, _Var1, _Var1)
THEN
NOT DB_SHA_Crypt_DoorsPreviousState(_Var1, "open");
Open(_Var1);

PROC
PROC_SHA_Crypt_EndTrap()
THEN
TimerLaunch("SHA_Crypt_RemoveEmbers", 10000);

IF
TimerFinished("SHA_Crypt_RemoveEmbers", (ITEM)_Var1, (ITEM)_Var1, (ITEM)_Var1, (ITEM)_Var1)
AND
DB_SHA_Crypt_FireTrapPoint(_Var1, _Var1, _Var1, _Var1, _Var1)
THEN
SetDualEntityEvent(NULL_00000000-0000-0000-0000-000000000000, _Var1, "SHA_CryptTrap_Off");

IF
DualEntityEvent(_, _, "SHA_Crypt_Switch2_On", (GUIDSTRING)_, (GUIDSTRING)_)
THEN
PROC_SHA_Crypt_DisableRings();

IF
DualEntityEvent(_, _, (STRING)_Var3, _, _)
AND
DB_SHA_EntrancePuzzle_BrazierEvents(_Var3, _, _Var5, _, _)
AND
DB_SHA_EntrancePuzzle_Braziers(_Var5, _Var6, _Var7, _, _)
THEN
ItemMoveTo(_Var6, _Var7, 1, 0, 0, "SHA_Crypt_BrazierMoved", 1);
PROC_SHA_Crypt_BrazierSound(_Var6);

IF
DualEntityEvent(_, _, (STRING)_Var3, _, _)
AND
DB_SHA_EntrancePuzzle_BrazierEvents(_, _Var3, _Var5, _, _)
AND
DB_SHA_EntrancePuzzle_Braziers(_Var5, _Var6, _, _Var8, _)
THEN
ItemMoveTo(_Var6, _Var8, 1, 0, 0, "SHA_Crypt_BrazierMoved", 1);
PROC_SHA_Crypt_BrazierSound(_Var6);

PROC
PROC_SHA_Crypt_BrazierSound((ITEM)_Var1, (ITEM)_Var1, (ITEM)_Var1, (ITEM)_Var1, (ITEM)_Var1)
AND
DB_SHA_Crypt_BrazierMoving(_Var1, _Var1, _Var1, _Var1, _Var1)
THEN
PlaySound(_Var1, "SHA_Crypt_BrazierMoveStopped");

PROC
PROC_SHA_Crypt_BrazierSound((ITEM)_Var1, (ITEM)_Var1, (ITEM)_Var1, (ITEM)_Var1, (ITEM)_Var1)
THEN
DB_SHA_Crypt_BrazierMoving(_Var1);
PlaySound(_Var1, "SHA_Crypt_BrazierMoving");

IF
EntityEvent((GUIDSTRING)_Var1, "SHA_Crypt_BrazierMoved", (GUIDSTRING)_Var1, (GUIDSTRING)_Var1, (GUIDSTRING)_Var1)
AND
DB_SHA_EntrancePuzzle_Braziers(_, _Var1, _, _, _Var1)
THEN
PlaySound(_Var1, "SHA_Crypt_BrazierMoveStopped");

IF
EntityEvent((GUIDSTRING)_Var1, "SHA_Crypt_BrazierMoved", (GUIDSTRING)_Var1, (GUIDSTRING)_Var1, (GUIDSTRING)_Var1)
AND
DB_SHA_Crypt_BrazierMoving(_Var1, _Var1, _Var1, _Var1, _Var1)
THEN
NOT DB_SHA_Crypt_BrazierMoving(_Var1);

IF
EnteredTrigger((GUIDSTRING)_Var1, S_SHA_EntrancePuzzle_RingArea_abd85d77-d053-4187-b76c-6fbe35ee9902, (GUIDSTRING)_Var1, (GUIDSTRING)_Var1, (GUIDSTRING)_Var1)
AND
DB_SHA_Crypt_Rings(_Var2, _Var1, _Var1, _Var1, _Var1)
THEN
TriggerRegisterForCharacter(_Var2, _Var1);

IF
LeftTrigger((GUIDSTRING)_Var1, S_SHA_EntrancePuzzle_RingArea_abd85d77-d053-4187-b76c-6fbe35ee9902, (GUIDSTRING)_Var1, (GUIDSTRING)_Var1, (GUIDSTRING)_Var1)
AND
DB_SHA_Crypt_Rings(_Var2, _Var1, _Var1, _Var1, _Var1)
THEN
TriggerUnregisterForCharacter(_Var2, _Var1);

IF
EnteredTrigger((GUIDSTRING)_Var1, (GUIDSTRING)_Var2, (GUIDSTRING)_Var1, (GUIDSTRING)_Var1, (GUIDSTRING)_Var1)
AND NOT
DB_SHA_Crypt_RingsDisabled(1, _Var1, _Var1, _Var1, _Var1)
AND
DB_SHA_Crypt_Rings(_Var2, _Var1, _Var1, _Var1, _Var1)
AND NOT
DB_SHA_Crypt_BlockExplosionFor(_Var1, _Var1, _Var1, _Var1, _Var1)
THEN
RealtimeObjectTimerLaunch(_Var1, "SHA_Rings_Explosion", 4000);
DB_SHA_Crypt_BlockExplosionFor(_Var1);
CreateExplosion(S_SHA_EntrancePuzzle_PushBackOrigin_6033bf61-df5e-44e8-b387-217513235179, "Projectile_SHA_EntrancePuzzle_RingPushBack", -1, S_SHA_Crypt_TrapDefuser_03ba50b7-b34d-4416-9e90-72d6d8bb08c4);

IF
ObjectTimerFinished((GUIDSTRING)_Var1, "SHA_Rings_Explosion", (GUIDSTRING)_Var1, (GUIDSTRING)_Var1, (GUIDSTRING)_Var1)
THEN
NOT DB_SHA_Crypt_BlockExplosionFor(_Var1);

IF
UseFinished(_, S_SHA_Crypt_TrapDefuser_03ba50b7-b34d-4416-9e90-72d6d8bb08c4, 1, (CHARACTER)_, (CHARACTER)_)
THEN
PROC_SHA_Crypt_DisableRings();

IF
UseFinished((CHARACTER)_Var1, S_SHA_Crypt_DoorToChurch_6c50da0e-9302-4be5-8ca8-43679c4fdd91, 0, (CHARACTER)_Var1, (CHARACTER)_Var1)
AND
DB_Players(_Var1, _Var1, _Var1, _Var1, _Var1)
AND
HasActiveStatus(S_SHA_Crypt_DoorToChurch_6c50da0e-9302-4be5-8ca8-43679c4fdd91, "ARCANE_LOCK", 1, _Var1, _Var1)
AND NOT
DB_CantTalk(_Var1, _Var1, _Var1, _Var1, _Var1)
THEN
StartVoiceBark(SHA_Crypt_VB_MagicLockedDoor_6692c97d-72b1-0f4a-a276-8da059e2ef16, _Var1);

PROC
PROC_SHA_Crypt_DisableRings()
THEN
DB_SHA_Crypt_RingsDisabled(1);
PROC_SHA_Crypt_EndTrap();
DB_SHA_Crypt_BlockFireTrap(1);
RemoveStatus(S_SHA_Crypt_DoorToChurch_6c50da0e-9302-4be5-8ca8-43679c4fdd91, "ARCANE_LOCK");
PROC_ItemUnlockAndOpen(S_SHA_Crypt_DoorToWestCrypt_220e44f0-85df-40d1-9519-404837d84ce8);

PROC
PROC_SHA_Crypt_DisableRings()
AND
DB_SHA_EntrancePuzzle_RingVisible(_Var1, _, _Var1, _Var1, _Var1)
THEN
PROC_SHA_Crypt_SetVisible(_Var1, 0);

IF
DB_SHA_EntrancePuzzle_LightDetectors(_, _Var2, _, _, _)
THEN
SetVisible(_Var2, 0);

IF
EntityEvent((GUIDSTRING)_Var1, "DetectorUnderLight", (GUIDSTRING)_Var1, (GUIDSTRING)_Var1, (GUIDSTRING)_Var1)
AND
DB_SHA_EntrancePuzzle_LightDetectors(_Var2, _Var1, _Var1, _Var1, _Var1)
THEN
PROC_SHA_Crypt_CheckRingInDarkness(_Var2);

IF
EntityEvent((GUIDSTRING)_Var1, "DetectorInDarkness", (GUIDSTRING)_Var1, (GUIDSTRING)_Var1, (GUIDSTRING)_Var1)
AND
DB_SHA_EntrancePuzzle_LightDetectors(_Var2, _Var1, _Var1, _Var1, _Var1)
THEN
PROC_SHA_Crypt_CheckRingInDarkness(_Var2);

PROC
PROC_SHA_Crypt_CheckRingInDarkness((STRING)_Var1, (STRING)_Var1, (STRING)_Var1, (STRING)_Var1, (STRING)_Var1)
AND
DB_SHA_EntrancePuzzle_RingVisible(_Var1, 0, _Var1, _Var1, _Var1)
AND NOT
QRY_SHA_Crypt_AnyDetectorIlluminated(_Var1, _Var1, _Var1, _Var1, _Var1)
THEN
PROC_SHA_Crypt_SetVisible(_Var1, 1);

PROC
PROC_SHA_Crypt_CheckRingInDarkness((STRING)_Var1, (STRING)_Var1, (STRING)_Var1, (STRING)_Var1, (STRING)_Var1)
AND
DB_SHA_EntrancePuzzle_RingVisible(_Var1, 1, _Var1, _Var1, _Var1)
AND
QRY_SHA_Crypt_AnyDetectorIlluminated(_Var1, _Var1, _Var1, _Var1, _Var1)
THEN
PROC_SHA_Crypt_SetVisible(_Var1, 0);

PROC
PROC_SHA_Crypt_SetVisible((STRING)_Var1, (INTEGER)_Var2, (STRING)_Var1, (STRING)_Var1, (STRING)_Var1)
AND
DB_SHA_EntrancePuzzle_RingVisible(_Var1, _Var3, _Var1, _Var1, _Var1)
AND
_Var3 != _Var2
THEN
NOT DB_SHA_EntrancePuzzle_RingVisible(_Var1, _Var3);
DB_SHA_EntrancePuzzle_RingVisible(_Var1, _Var2);

IF
DB_SHA_EntrancePuzzle_RingVisible(_Var1, 1, _Var1, _Var1, _Var1)
AND
DB_SHA_EntrancePuzzle_RingsVFX(_Var1, _Var2, _Var1, _Var1, _Var1)
THEN
PROC_LoopEffect(_Var2, S_SHA_RingVisuals_fd98f557-3479-4463-8e6c-c1ebfe5ca723, _Var1, "SCL_Main_A", "");

IF
DB_SHA_EntrancePuzzle_RingVisible(_Var1, 0, _Var1, _Var1, _Var1)
AND
DB_SHA_EntrancePuzzle_RingsVFX(_Var1, _, _Var1, _Var1, _Var1)
THEN
PROC_StopLoopEffect(S_SHA_RingVisuals_fd98f557-3479-4463-8e6c-c1ebfe5ca723, _Var1);

PROC
PROC_SHA_Crypt_SetVisible("SHA_OuterRing", _, _, _, _)
THEN
SetFlag(SHA_Crypt_Knows_OuterRingVisible_a18211a6-61a8-48f2-a81f-a105ae1958e5, NULL_00000000-0000-0000-0000-000000000000);

QRY
QRY_SHA_Crypt_AnyDetectorIlluminated((STRING)_Var1, (STRING)_Var1, (STRING)_Var1, (STRING)_Var1, (STRING)_Var1)
AND
DB_SHA_EntrancePuzzle_LightDetectors(_Var1, _Var2, _Var1, _Var1, _Var1)
AND NOT
GetObscuredState(_Var2, "HeavilyObscured", _Var1, _Var1, _Var1)
THEN
DB_NOOP(1);

IF
DB_GlobalFlag(Debug_SHA_SolveRingPuzzle_88108578-4837-401a-9ed5-f815e0a150f7, _, _, _, _)
THEN
PROC_SHA_Crypt_DisableRings();

IF
TextEvent("showringspuzzle", _, _, _, _)
THEN
PROC_LoopEffect(VFX_Script_SHA_Forcefield_Inner_01_59f36fd7-fdbe-e30d-b4c0-47f8560abd02, S_SHA_RingVisuals_fd98f557-3479-4463-8e6c-c1ebfe5ca723, "Debug_SHA_InnerRing", "SCL_Main_A", "");
PROC_LoopEffect(VFX_Script_SHA_Forcefield_Outer_01_d550c5d2-6a3e-6a98-0094-d64d9f81b719, S_SHA_RingVisuals_fd98f557-3479-4463-8e6c-c1ebfe5ca723, "Debug_SHA_InnerRing", "SCL_Main_A", "");

IF
TextEvent("hideringspuzzle", _, _, _, _)
THEN
PROC_StopLoopEffect(S_SHA_RingVisuals_fd98f557-3479-4463-8e6c-c1ebfe5ca723, "Debug_SHA_InnerRing");
PROC_StopLoopEffect(S_SHA_RingVisuals_fd98f557-3479-4463-8e6c-c1ebfe5ca723, "Debug_SHA_InnerRing");

IF
TextEvent("showringspuzzlelightdetectors", _, _, _, _)
AND
DB_SHA_EntrancePuzzle_LightDetectors(_, _Var2, _, _, _)
THEN
SetVisible(_Var2, 1);

IF
TextEvent("hideringspuzzlelightdetectors", _, _, _, _)
AND
DB_SHA_EntrancePuzzle_LightDetectors(_, _Var2, _, _, _)
THEN
SetVisible(_Var2, 0);


EXITSECTION
ENDEXITSECTION

ParentTargetEdge "Act2"
